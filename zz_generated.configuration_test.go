// Code generated by mockery v2.36.1. DO NOT EDIT.

package gaetway

import mock "github.com/stretchr/testify/mock"

// MockConfiguration is an autogenerated mock type for the Configuration type
type MockConfiguration struct {
	mock.Mock
}

type MockConfiguration_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfiguration) EXPECT() *MockConfiguration_Expecter {
	return &MockConfiguration_Expecter{mock: &_m.Mock}
}

// Cache provides a mock function with given fields:
func (_m *MockConfiguration) Cache() Cache {
	ret := _m.Called()

	var r0 Cache
	if rf, ok := ret.Get(0).(func() Cache); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Cache)
		}
	}

	return r0
}

// MockConfiguration_Cache_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Cache'
type MockConfiguration_Cache_Call struct {
	*mock.Call
}

// Cache is a helper method to define mock.On call
func (_e *MockConfiguration_Expecter) Cache() *MockConfiguration_Cache_Call {
	return &MockConfiguration_Cache_Call{Call: _e.mock.On("Cache")}
}

func (_c *MockConfiguration_Cache_Call) Run(run func()) *MockConfiguration_Cache_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockConfiguration_Cache_Call) Return(_a0 Cache) *MockConfiguration_Cache_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfiguration_Cache_Call) RunAndReturn(run func() Cache) *MockConfiguration_Cache_Call {
	_c.Call.Return(run)
	return _c
}

// GetFilterConfig provides a mock function with given fields:
func (_m *MockConfiguration) GetFilterConfig() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// MockConfiguration_GetFilterConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFilterConfig'
type MockConfiguration_GetFilterConfig_Call struct {
	*mock.Call
}

// GetFilterConfig is a helper method to define mock.On call
func (_e *MockConfiguration_Expecter) GetFilterConfig() *MockConfiguration_GetFilterConfig_Call {
	return &MockConfiguration_GetFilterConfig_Call{Call: _e.mock.On("GetFilterConfig")}
}

func (_c *MockConfiguration_GetFilterConfig_Call) Run(run func()) *MockConfiguration_GetFilterConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockConfiguration_GetFilterConfig_Call) Return(_a0 interface{}) *MockConfiguration_GetFilterConfig_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfiguration_GetFilterConfig_Call) RunAndReturn(run func() interface{}) *MockConfiguration_GetFilterConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConfiguration creates a new instance of MockConfiguration. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfiguration(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfiguration {
	mock := &MockConfiguration{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
